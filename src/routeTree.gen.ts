/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'

// Create Virtual Routes

const VolunteeringLazyImport = createFileRoute('/volunteering')()
const StackLazyImport = createFileRoute('/stack')()
const ContactLazyImport = createFileRoute('/contact')()
const AboutLazyImport = createFileRoute('/about')()
const IndexLazyImport = createFileRoute('/')()
const ProjectsIndexLazyImport = createFileRoute('/projects/')()
const ProjectsDemetricLazyImport = createFileRoute('/projects/demetric')()
const ProjectsBuiltviewLazyImport = createFileRoute('/projects/builtview')()
const ProjectsAusfirstLazyImport = createFileRoute('/projects/ausfirst')()

// Create/Update Routes

const VolunteeringLazyRoute = VolunteeringLazyImport.update({
  path: '/volunteering',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/volunteering.lazy').then((d) => d.Route))

const StackLazyRoute = StackLazyImport.update({
  path: '/stack',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/stack.lazy').then((d) => d.Route))

const ContactLazyRoute = ContactLazyImport.update({
  path: '/contact',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/contact.lazy').then((d) => d.Route))

const AboutLazyRoute = AboutLazyImport.update({
  path: '/about',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/about.lazy').then((d) => d.Route))

const IndexLazyRoute = IndexLazyImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route))

const ProjectsIndexLazyRoute = ProjectsIndexLazyImport.update({
  path: '/projects/',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/projects/index.lazy').then((d) => d.Route),
)

const ProjectsDemetricLazyRoute = ProjectsDemetricLazyImport.update({
  path: '/projects/demetric',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/projects/demetric.lazy').then((d) => d.Route),
)

const ProjectsBuiltviewLazyRoute = ProjectsBuiltviewLazyImport.update({
  path: '/projects/builtview',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/projects/builtview.lazy').then((d) => d.Route),
)

const ProjectsAusfirstLazyRoute = ProjectsAusfirstLazyImport.update({
  path: '/projects/ausfirst',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/projects/ausfirst.lazy').then((d) => d.Route),
)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      preLoaderRoute: typeof IndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/about': {
      preLoaderRoute: typeof AboutLazyImport
      parentRoute: typeof rootRoute
    }
    '/contact': {
      preLoaderRoute: typeof ContactLazyImport
      parentRoute: typeof rootRoute
    }
    '/stack': {
      preLoaderRoute: typeof StackLazyImport
      parentRoute: typeof rootRoute
    }
    '/volunteering': {
      preLoaderRoute: typeof VolunteeringLazyImport
      parentRoute: typeof rootRoute
    }
    '/projects/ausfirst': {
      preLoaderRoute: typeof ProjectsAusfirstLazyImport
      parentRoute: typeof rootRoute
    }
    '/projects/builtview': {
      preLoaderRoute: typeof ProjectsBuiltviewLazyImport
      parentRoute: typeof rootRoute
    }
    '/projects/demetric': {
      preLoaderRoute: typeof ProjectsDemetricLazyImport
      parentRoute: typeof rootRoute
    }
    '/projects/': {
      preLoaderRoute: typeof ProjectsIndexLazyImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren([
  IndexLazyRoute,
  AboutLazyRoute,
  ContactLazyRoute,
  StackLazyRoute,
  VolunteeringLazyRoute,
  ProjectsAusfirstLazyRoute,
  ProjectsBuiltviewLazyRoute,
  ProjectsDemetricLazyRoute,
  ProjectsIndexLazyRoute,
])

/* prettier-ignore-end */
